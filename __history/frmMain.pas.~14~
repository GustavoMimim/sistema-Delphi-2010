unit frmMain;

interface

uses
  module, frmCity, Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, ExtCtrls, StdCtrls, pngimage, DB, ADODB;

type
  TForm1 = class(TForm)
    sideMenu: TTreeView;
    mainBody: TPanel;
    header: TPanel;
    Panel1: TPanel;
    Label1: TLabel;
    Edit1: TEdit;
    lvRecords: TListView;
    Panel2: TPanel;
    btnRemove: TButton;
    btnUpdate: TButton;
    btnAdd: TButton;
    procedure FormCreate(Sender: TObject);
    procedure btnAddClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure createList();
  end;

var
  Form1: TForm1;
  Form2: TForm2;
  dt: TDm;

implementation

{$R *.dfm}

procedure TForm1.btnAddClick(Sender: TObject);
begin

  Application.CreateForm(TForm2, Form2);

  Form2.newRecord := true;
  Form2.btnRemove.Visible := false;
  Form2.Show;

end;

procedure TForm1.createList();
var
  item: TListItem;

begin

  // Limpa o Conteudo Existente no ListView
  lvRecords.Clear;

  dt.sqlCity.SQL.Add('SELECT * from cidades');
  // Posicionamos no Primeiro Registro
  dt.sqlCity.Open;

  while not dt.sqlCity.Eof do
  begin

    // Adicionamos um Item ao ListView
    item := lvRecords.Items.Add;

    // Adicionamos dados a Coluna Login
    item.Caption := dt.sqlCity.FieldByName('codigo_cidade').Value;

    // Adicionamos a Coluna Nome do Usuario
    item.SubItems.Add(dt.sqlCity.FieldByName('nome').Value);

    // Adicionamos a coluna Nivel
    item.SubItems.Add(dt.sqlCity.FieldByName('estado').Value);

    // Adicionamos a coluna Nivel
    item.SubItems.Add(dt.sqlCity.FieldByName('cep_inicial').Value);

    // Adicionamos a coluna Nivel
    item.SubItems.Add(dt.sqlCity.FieldByName('cep_final').Value);

    // Mudamos para o proximo registro
    dt.sqlCity.Next;

  end;

end;

procedure TForm1.FormCreate(Sender: TObject);
begin

  dt := TDm.Create(Self);

  createList();

end;

end.
